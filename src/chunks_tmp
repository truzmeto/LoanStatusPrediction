
### ANN 
MLP = MLPClassifier(hidden_layer_sizes = (10,4),
                    activation = 'logistic',
                    solver = 'sgd',
                    learning_rate_init = 0.001,
                    max_iter = 500,
                    shuffle = True,
                    random_state = 10,
                    early_stopping = True,
                    validation_fraction=0.2)

MLP.fit(x_train,y_train)
##NN prediction on test data
pred_test_mlp = MLP.predict(x_test)
print(confusion_matrix(y_test,pred_test_mlp))
print(classification_report(y_test,pred_test_mlp))





#from sklearn.model_selection import GridSearchCV
#from sklearn import svm
#parameters = {'kernel': ['rbf'],
#              'C':[1, 4]}
#svc = svm.SVC(gamma="scale")
#clf = GridSearchCV(svc, parameters, cv=4, n_jobs=8)
#clf.fit(x_train, y_train)



#def LoanCondition(status):
    
#    if status in late:
#        return 'Late'
#    elif status == 'Fully Paid':
#        return 'Paid'
#    elif status == 'Default':
#        return 'Charged Off'
#    elif status == 'Current':
#        return 'Current'

#tmp = df['loan_status'].apply(LoanCondition)
#df.loan_status = tmp